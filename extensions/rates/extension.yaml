# Copyright 2021 Auctane
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: calculate-rates
version: 0.0.1
specVersion: v1beta

displayName: Calculate Shipping Rates with ShipEngine
description: >
  Calculates real-time shipping rates across 60+ carriers using shipment data written to a Cloud Firestore collection.

license: Apache-2.0
sourceUrl: https://github.com/ShipEngine/firebase-extensions/tree/master/extensions/validate-address

author:
  authorName: ShipEngine
  url: https://shipengine.com

contributors:
  - authorName: Patrick Jones
    url: https://github.com/forksofpower
  - authorName: Andrew Hite
    url: https://github.com/andyhite

billingRequired: true

roles:
  - role: datastore.user
    reason:
      Allows this extension to access Cloud Firestore to read and process added
      documents.

resources:
  - name: getRates
    type: firebaseextensions.v1beta.function
    description:
      Processes shipment data in the specified Cloud Firestore collection,
      fetches rates, and updates the document with rate information.
    properties:
      location: ${param:LOCATION}
      runtime: nodejs14
      eventTrigger:
        eventType: providers/cloud.firestore/eventTypes/document.write
        resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:COLLECTION_PATH}/{addressId}
  - name: getRatesHttps
    type: firebaseextensions.v1beta.function
    properties:
      location: ${LOCATION}
      runtime: nodejs14
      httpsTrigger: {}

params:
  - param: LOCATION
    label: Cloud Functions location
    description: >-
      Where do you want to deploy the functions created for this extension? You
      usually want a location close to your database. For help selecting a
      location, refer to the [location selection
      guide](https://firebase.google.com/docs/functions/locations).
    type: select
    options:
      - label: Iowa (us-central1)
        value: us-central1
      - label: South Carolina (us-east1)
        value: us-east1
      - label: Northern Virginia (us-east4)
        value: us-east4
      - label: Los Angeles (us-west2)
        value: us-west2
      - label: Salt Lake City (us-west3)
        value: us-west3
      - label: Las Vegas (us-west4)
        value: us-west4
      - label: Warsaw (europe-central2)
        value: europe-central2
      - label: Belgium (europe-west1)
        value: europe-west1
      - label: London (europe-west2)
        value: europe-west2
      - label: Frankfurt (europe-west3)
        value: europe-west3
      - label: Zurich (europe-west6)
        value: europe-west6
      - label: Hong Kong (asia-east2)
        value: asia-east2
      - label: Tokyo (asia-northeast1)
        value: asia-northeast1
      - label: Osaka (asia-northeast2)
        value: asia-northeast2
      - label: Seoul (asia-northeast3)
        value: asia-northeast3
      - label: Mumbai (asia-south1)
        value: asia-south1
      - label: Jakarta (asia-southeast2)
        value: asia-southeast2
      - label: Montreal (northamerica-northeast1)
        value: northamerica-northeast1
      - label: Sao Paulo (southamerica-east1)
        value: southamerica-east1
      - label: Sydney (australia-southeast1)
        value: australia-southeast1
    default: us-central1
    required: true
    immutable: true

  - param: SHIPENGINE_API_KEY
    label: ShipEngine Api Key
    type: string
    description: >
      Api key found on the api dashboard.
    required: true

  - param: COLLECTION_PATH
    label: Firestore path
    description: >
      What is the path to the collection that contains the documents with
      shipment info for validation?
    type: string
    validationRegex: ^\S+$
    validationErrorMessage: Path cannot have spaces.
    example: path/to/addresses
    default: shipments
    required: false

  - param: RATES_KEY
    label: Shipping Rates Key
    description: >
      The document key to store the rates result in.
    type: string
    default: rates
    required: false

  - param: CARRIER_IDS
    label: ShipEngine Carrier IDs
    description: >
      A comma separated list of Carrier IDs from your ShipEngine account.
    type: string
    required: true

  - param: INPUT_SCHEMA
    label: Input Schema
    description: >
      A schema object mapping the collection's data to the required ShipEngine
      API structure.
    type: string
    default: >
      {
        "shipmentId": "shipmentId",
        "rateOptions": {
          "carrierIds": "rateOptions.carrierIds",
          "packageTypes": "rateOptions.packageTypes",
          "serviceCodes": "rateOptions.serviceCodes",
          "calculateTaxAmount": "rateOptions.calculateTaxAmount",
          "preferredCurrency": "rateOptions.preferredCurrency"
        },
        "shipment": {
          "shipTo": {
            "name": "shipment.shipTo.name",
            "phone": "shipment.shipTo.phone",
            "addressLine1": "shipment.shipTo.addressLine1",
            "addressLine2": "shipment.shipTo.addressLine2",
            "cityLocality": "shipment.shipTo.cityLocality",
            "stateProvince": "shipment.shipTo.stateProvince",
            "postalCode": "shipment.shipTo.postalCode",
            "countryCode": "shipment.shipTo.countryCode",
            "addressResidentialIndicator": "shipment.shipTo.addressResidentialIndicator"
          },
          "shipFrom": {
            "companyName": "shipment.shipFrom.companyName",
            "name": "shipment.shipFrom.name",
            "phone": "shipment.shipFrom.phone",
            "addressLine1": "shipment.shipTo.addressLine1",
            "addressLine2": "shipment.shipTo.addressLine2",
            "cityLocality": "shipment.shipTo.cityLocality",
            "stateProvince": "shipment.shipTo.stateProvince",
            "postalCode": "shipment.shipTo.postalCode",
            "countryCode": "shipment.shipTo.countryCode",
            "addressResidentialIndicator": "shipment.shipFrom.addressResidentialIndicator"
          },
          "packages": {
            "_root": "shipment.packages",
            "weight": {
              "value": "weight.value",
              "unit": "weight.unit"
            }
          }
        }
      }
    required: false
